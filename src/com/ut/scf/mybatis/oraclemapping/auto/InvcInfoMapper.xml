<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ut.scf.dao.auto.InvcInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ut.scf.pojo.auto.InvcInfo" >
    <id column="REC_UID" property="recUid" jdbcType="VARCHAR" />
    <result column="REG_BTC_ID" property="regBtcId" jdbcType="VARCHAR" />
    <result column="CNF_BTC_ID" property="cnfBtcId" jdbcType="VARCHAR" />
    <result column="TRANS_BTC_ID" property="transBtcId" jdbcType="VARCHAR" />
    <result column="INVC_NO" property="invcNo" jdbcType="VARCHAR" />
    <result column="CNTRCT_NO" property="cntrctNo" jdbcType="VARCHAR" />
    <result column="INVC_DATE" property="invcDate" jdbcType="TIMESTAMP" />
    <result column="INV_START_DATE" property="invStartDate" jdbcType="TIMESTAMP" />
    <result column="INV_DUE_DATE" property="invDueDate" jdbcType="TIMESTAMP" />
    <result column="INV_AMT" property="invAmt" jdbcType="DECIMAL" />
    <result column="INV_STATUS" property="invStatus" jdbcType="VARCHAR" />
    <result column="CNT_NO" property="cntNo" jdbcType="VARCHAR" />
    <result column="IS_CHARGE" property="isCharge" jdbcType="VARCHAR" />
    <result column="CHARGE" property="charge" jdbcType="DECIMAL" />
    <result column="INVC_TOTAL_AMT" property="invcTotalAmt" jdbcType="DECIMAL" />
    <result column="INVC_CONFIRM_AMT" property="invcConfirmAmt" jdbcType="DECIMAL" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="BUSI_DT" property="busiDt" jdbcType="TIMESTAMP" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    REC_UID, REG_BTC_ID, CNF_BTC_ID, TRANS_BTC_ID, INVC_NO, CNTRCT_NO, INVC_DATE, INV_START_DATE, 
    INV_DUE_DATE, INV_AMT, INV_STATUS, CNT_NO, IS_CHARGE, CHARGE, INVC_TOTAL_AMT, INVC_CONFIRM_AMT, 
    CREATE_USER, CREATE_TIME, STATUS, BUSI_DT, UPDATE_USER, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ut.scf.pojo.auto.InvcInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SCFCLOUD.INVC_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SCFCLOUD.INVC_INFO
    where REC_UID = #{recUid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SCFCLOUD.INVC_INFO
    where REC_UID = #{recUid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ut.scf.pojo.auto.InvcInfoExample" >
    delete from SCFCLOUD.INVC_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ut.scf.pojo.auto.InvcInfo" >
    insert into SCFCLOUD.INVC_INFO (REC_UID, REG_BTC_ID, CNF_BTC_ID, 
      TRANS_BTC_ID, INVC_NO, CNTRCT_NO, 
      INVC_DATE, INV_START_DATE, INV_DUE_DATE, 
      INV_AMT, INV_STATUS, CNT_NO, 
      IS_CHARGE, CHARGE, INVC_TOTAL_AMT, 
      INVC_CONFIRM_AMT, CREATE_USER, CREATE_TIME, 
      STATUS, BUSI_DT, UPDATE_USER, 
      UPDATE_TIME)
    values (#{recUid,jdbcType=VARCHAR}, #{regBtcId,jdbcType=VARCHAR}, #{cnfBtcId,jdbcType=VARCHAR}, 
      #{transBtcId,jdbcType=VARCHAR}, #{invcNo,jdbcType=VARCHAR}, #{cntrctNo,jdbcType=VARCHAR}, 
      #{invcDate,jdbcType=TIMESTAMP}, #{invStartDate,jdbcType=TIMESTAMP}, #{invDueDate,jdbcType=TIMESTAMP}, 
      #{invAmt,jdbcType=DECIMAL}, #{invStatus,jdbcType=VARCHAR}, #{cntNo,jdbcType=VARCHAR}, 
      #{isCharge,jdbcType=VARCHAR}, #{charge,jdbcType=DECIMAL}, #{invcTotalAmt,jdbcType=DECIMAL}, 
      #{invcConfirmAmt,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=DECIMAL}, #{busiDt,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ut.scf.pojo.auto.InvcInfo" >
    insert into SCFCLOUD.INVC_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recUid != null" >
        REC_UID,
      </if>
      <if test="regBtcId != null" >
        REG_BTC_ID,
      </if>
      <if test="cnfBtcId != null" >
        CNF_BTC_ID,
      </if>
      <if test="transBtcId != null" >
        TRANS_BTC_ID,
      </if>
      <if test="invcNo != null" >
        INVC_NO,
      </if>
      <if test="cntrctNo != null" >
        CNTRCT_NO,
      </if>
      <if test="invcDate != null" >
        INVC_DATE,
      </if>
      <if test="invStartDate != null" >
        INV_START_DATE,
      </if>
      <if test="invDueDate != null" >
        INV_DUE_DATE,
      </if>
      <if test="invAmt != null" >
        INV_AMT,
      </if>
      <if test="invStatus != null" >
        INV_STATUS,
      </if>
      <if test="cntNo != null" >
        CNT_NO,
      </if>
      <if test="isCharge != null" >
        IS_CHARGE,
      </if>
      <if test="charge != null" >
        CHARGE,
      </if>
      <if test="invcTotalAmt != null" >
        INVC_TOTAL_AMT,
      </if>
      <if test="invcConfirmAmt != null" >
        INVC_CONFIRM_AMT,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="busiDt != null" >
        BUSI_DT,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recUid != null" >
        #{recUid,jdbcType=VARCHAR},
      </if>
      <if test="regBtcId != null" >
        #{regBtcId,jdbcType=VARCHAR},
      </if>
      <if test="cnfBtcId != null" >
        #{cnfBtcId,jdbcType=VARCHAR},
      </if>
      <if test="transBtcId != null" >
        #{transBtcId,jdbcType=VARCHAR},
      </if>
      <if test="invcNo != null" >
        #{invcNo,jdbcType=VARCHAR},
      </if>
      <if test="cntrctNo != null" >
        #{cntrctNo,jdbcType=VARCHAR},
      </if>
      <if test="invcDate != null" >
        #{invcDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invStartDate != null" >
        #{invStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invDueDate != null" >
        #{invDueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invAmt != null" >
        #{invAmt,jdbcType=DECIMAL},
      </if>
      <if test="invStatus != null" >
        #{invStatus,jdbcType=VARCHAR},
      </if>
      <if test="cntNo != null" >
        #{cntNo,jdbcType=VARCHAR},
      </if>
      <if test="isCharge != null" >
        #{isCharge,jdbcType=VARCHAR},
      </if>
      <if test="charge != null" >
        #{charge,jdbcType=DECIMAL},
      </if>
      <if test="invcTotalAmt != null" >
        #{invcTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="invcConfirmAmt != null" >
        #{invcConfirmAmt,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="busiDt != null" >
        #{busiDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ut.scf.pojo.auto.InvcInfoExample" resultType="java.lang.Integer" >
    select count(*) from SCFCLOUD.INVC_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SCFCLOUD.INVC_INFO
    <set >
      <if test="record.recUid != null" >
        REC_UID = #{record.recUid,jdbcType=VARCHAR},
      </if>
      <if test="record.regBtcId != null" >
        REG_BTC_ID = #{record.regBtcId,jdbcType=VARCHAR},
      </if>
      <if test="record.cnfBtcId != null" >
        CNF_BTC_ID = #{record.cnfBtcId,jdbcType=VARCHAR},
      </if>
      <if test="record.transBtcId != null" >
        TRANS_BTC_ID = #{record.transBtcId,jdbcType=VARCHAR},
      </if>
      <if test="record.invcNo != null" >
        INVC_NO = #{record.invcNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cntrctNo != null" >
        CNTRCT_NO = #{record.cntrctNo,jdbcType=VARCHAR},
      </if>
      <if test="record.invcDate != null" >
        INVC_DATE = #{record.invcDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invStartDate != null" >
        INV_START_DATE = #{record.invStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invDueDate != null" >
        INV_DUE_DATE = #{record.invDueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invAmt != null" >
        INV_AMT = #{record.invAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.invStatus != null" >
        INV_STATUS = #{record.invStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cntNo != null" >
        CNT_NO = #{record.cntNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isCharge != null" >
        IS_CHARGE = #{record.isCharge,jdbcType=VARCHAR},
      </if>
      <if test="record.charge != null" >
        CHARGE = #{record.charge,jdbcType=DECIMAL},
      </if>
      <if test="record.invcTotalAmt != null" >
        INVC_TOTAL_AMT = #{record.invcTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.invcConfirmAmt != null" >
        INVC_CONFIRM_AMT = #{record.invcConfirmAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=DECIMAL},
      </if>
      <if test="record.busiDt != null" >
        BUSI_DT = #{record.busiDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SCFCLOUD.INVC_INFO
    set REC_UID = #{record.recUid,jdbcType=VARCHAR},
      REG_BTC_ID = #{record.regBtcId,jdbcType=VARCHAR},
      CNF_BTC_ID = #{record.cnfBtcId,jdbcType=VARCHAR},
      TRANS_BTC_ID = #{record.transBtcId,jdbcType=VARCHAR},
      INVC_NO = #{record.invcNo,jdbcType=VARCHAR},
      CNTRCT_NO = #{record.cntrctNo,jdbcType=VARCHAR},
      INVC_DATE = #{record.invcDate,jdbcType=TIMESTAMP},
      INV_START_DATE = #{record.invStartDate,jdbcType=TIMESTAMP},
      INV_DUE_DATE = #{record.invDueDate,jdbcType=TIMESTAMP},
      INV_AMT = #{record.invAmt,jdbcType=DECIMAL},
      INV_STATUS = #{record.invStatus,jdbcType=VARCHAR},
      CNT_NO = #{record.cntNo,jdbcType=VARCHAR},
      IS_CHARGE = #{record.isCharge,jdbcType=VARCHAR},
      CHARGE = #{record.charge,jdbcType=DECIMAL},
      INVC_TOTAL_AMT = #{record.invcTotalAmt,jdbcType=DECIMAL},
      INVC_CONFIRM_AMT = #{record.invcConfirmAmt,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=DECIMAL},
      BUSI_DT = #{record.busiDt,jdbcType=TIMESTAMP},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ut.scf.pojo.auto.InvcInfo" >
    update SCFCLOUD.INVC_INFO
    <set >
      <if test="regBtcId != null" >
        REG_BTC_ID = #{regBtcId,jdbcType=VARCHAR},
      </if>
      <if test="cnfBtcId != null" >
        CNF_BTC_ID = #{cnfBtcId,jdbcType=VARCHAR},
      </if>
      <if test="transBtcId != null" >
        TRANS_BTC_ID = #{transBtcId,jdbcType=VARCHAR},
      </if>
      <if test="invcNo != null" >
        INVC_NO = #{invcNo,jdbcType=VARCHAR},
      </if>
      <if test="cntrctNo != null" >
        CNTRCT_NO = #{cntrctNo,jdbcType=VARCHAR},
      </if>
      <if test="invcDate != null" >
        INVC_DATE = #{invcDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invStartDate != null" >
        INV_START_DATE = #{invStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invDueDate != null" >
        INV_DUE_DATE = #{invDueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invAmt != null" >
        INV_AMT = #{invAmt,jdbcType=DECIMAL},
      </if>
      <if test="invStatus != null" >
        INV_STATUS = #{invStatus,jdbcType=VARCHAR},
      </if>
      <if test="cntNo != null" >
        CNT_NO = #{cntNo,jdbcType=VARCHAR},
      </if>
      <if test="isCharge != null" >
        IS_CHARGE = #{isCharge,jdbcType=VARCHAR},
      </if>
      <if test="charge != null" >
        CHARGE = #{charge,jdbcType=DECIMAL},
      </if>
      <if test="invcTotalAmt != null" >
        INVC_TOTAL_AMT = #{invcTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="invcConfirmAmt != null" >
        INVC_CONFIRM_AMT = #{invcConfirmAmt,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="busiDt != null" >
        BUSI_DT = #{busiDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where REC_UID = #{recUid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ut.scf.pojo.auto.InvcInfo" >
    update SCFCLOUD.INVC_INFO
    set REG_BTC_ID = #{regBtcId,jdbcType=VARCHAR},
      CNF_BTC_ID = #{cnfBtcId,jdbcType=VARCHAR},
      TRANS_BTC_ID = #{transBtcId,jdbcType=VARCHAR},
      INVC_NO = #{invcNo,jdbcType=VARCHAR},
      CNTRCT_NO = #{cntrctNo,jdbcType=VARCHAR},
      INVC_DATE = #{invcDate,jdbcType=TIMESTAMP},
      INV_START_DATE = #{invStartDate,jdbcType=TIMESTAMP},
      INV_DUE_DATE = #{invDueDate,jdbcType=TIMESTAMP},
      INV_AMT = #{invAmt,jdbcType=DECIMAL},
      INV_STATUS = #{invStatus,jdbcType=VARCHAR},
      CNT_NO = #{cntNo,jdbcType=VARCHAR},
      IS_CHARGE = #{isCharge,jdbcType=VARCHAR},
      CHARGE = #{charge,jdbcType=DECIMAL},
      INVC_TOTAL_AMT = #{invcTotalAmt,jdbcType=DECIMAL},
      INVC_CONFIRM_AMT = #{invcConfirmAmt,jdbcType=DECIMAL},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=DECIMAL},
      BUSI_DT = #{busiDt,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where REC_UID = #{recUid,jdbcType=VARCHAR}
  </update>
</mapper>